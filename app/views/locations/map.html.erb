<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Locations Map</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <style>
    /* Ensure the html and body take up full height */
    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
    }

    /* Map container */
    #map {
      height: 100vh; /* 100% of the viewport height */
      width: 100%; /* 100% of the width */
    }
  </style>
</head>
<body>
  
  <div id="map"></div>

  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

  <script>
    // Initialize the map
    const map = L.map('map').setView([33.7490, -84.3880], 6); // Centered on Georgia

    // Add OpenStreetMap tiles
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 19,
      attribution: 'Â© OpenStreetMap contributors'
    }).addTo(map);

    // Pass locations from Rails to JavaScript
    const locations = <%= raw @locations.to_json(
      only: [:id, :latitude, :longitude, :city, :company_name, :location_category_id],
      methods: :has_active_order?
    ) %>;

    // Loop through locations and add markers
    locations.forEach(location => {
      let markerColor;

      // Determine marker color based on active orders and location category
      if (location.has_active_order) {  
        markerColor = 'green'; // Active order
      } else {
        switch (location.location_category_id) {
          case 1: markerColor = 'blue'; break;  // Origin
          case 2: markerColor = 'red'; break;   // Destination
          case 3: markerColor = 'gray'; break;  // Prospective
          default: markerColor = 'black';       // Unknown categories
        }
      }

      // Create a circle marker with the selected color
      const marker = L.circleMarker([location.latitude, location.longitude], {
        radius: 8,
        fillColor: markerColor,
        color: markerColor,
        fillOpacity: 0.8,
        stroke: false
      }).addTo(map);

      // Add a popup to the marker
      marker.bindPopup(`<a href="/locations/${location.id}">${location.company_name}</a>`);
    });
  </script>

</body>
</html>